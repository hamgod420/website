.code {
  --padding: var(--space2XL);

  color: var(--colorTextBody);
  position: relative;

  @media (--mediaTablet) {
    --padding: var(--spaceXL);
  }

  @media (--mediaMobile) {
    --padding: var(--spaceL);
  }

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background-color: var(--background);
    clip-path: polygon(0 0, calc(100% - 28px) 0, 100% 28px, 100% 100%, 0 100%);
  }

  & pre {
    transform: translateZ(0);
    overflow-x: auto;
    position: relative;
    padding: calc(var(--padding) + var(--spaceS)) var(--padding);
  }

  /* Based on the Poimandres theme */
  &[data-theme='dark'] {
    --background: rgb(26 26 28);
    --className: #5de4c7;
    --comment: #a6accd;
    --punctuation: #e4f0fb;
    --property: #e4f0fb;
    --boolean: #5de4c7;
    --string: #5de4c7;
    --operator: #add7ff;
    --function: #5de4c7;
    --keyword: #add7ff;
    --literal: #fffac2;
    --falsy: #f087bd;
    --char: #add7ff;
  }

  &[data-theme='light'] {
    --background: rgb(255 255 255);
    --comment: rgba(0 0 0 / 0.6);
    --keyword: #00378c;
    --string: rgb(4 98 108);
    --boolean: rgb(4 98 108);
    --punctuation: rgba(0 0 0 / 0.4);
    --function: rgb(4 98 108);
    --className: rgb(4 98 108);
    --operator: #a8093f;
    --char: #00378c;
  }

  /* stylelint-disable selector-class-pattern */
  & :global(code),
  & :global(pre) {
    height: auto;
    font-size: var(--fontSizeBodyS);
    line-height: var(--lineHeightBody);
    white-space: pre;
  }

  & :global(.namespace) {
    opacity: 0.7;
  }

  & :global(.token.attr-name) {
    color: var(--keyword);
  }

  & :global(.token.comment),
  & :global(.token.block-comment),
  & :global(.token.prolog),
  & :global(.token.doctype),
  & :global(.token.cdata) {
    color: var(--comment);
  }

  & :global(.token.property),
  & :global(.token.number),
  & :global(.token.function-name),
  & :global(.token.constant),
  & :global(.token.symbol),
  & :global(.token.deleted) {
    color: var(--primitive);
  }

  & :global(.token.boolean) {
    color: var(--boolean);
  }

  & :global(.token.tag) {
    color: var(--tag);
  }

  & :global(.token.string) {
    color: var(--string);
  }

  & :global(.token.punctuation) {
    color: var(--punctuation);
  }

  & :global(.token.selector),
  & :global(.token.char),
  & :global(.token.builtin),
  & :global(.token.inserted) {
    color: var(--char);
  }

  & :global(.token.function) {
    color: var(--function);
  }

  & :global(.token.operator),
  & :global(.token.entity),
  & :global(.token.url),
  & :global(.token.variable) {
    color: var(--variable);
  }

  & :global(.token.attr-value) {
    color: var(--string);
  }

  & :global(.token.keyword) {
    color: var(--keyword);
  }

  & :global(.token.atrule),
  & :global(.token.class-name) {
    color: var(--className);
  }

  & :global(.token.important) {
    font-weight: var(--fontWeightRegular);
  }

  & :global(.token.bold) {
    font-weight: var(--fontWeightBold);
  }

  & :global(.token.italic) {
    font-style: italic;
  }

  & :global(.token.entity) {
    cursor: help;
  }
}

.actions {
  position: absolute;
  right: var(--spaceM);
  bottom: var(--spaceM);
  opacity: 0;
  transition: opacity var(--durationS) var(--bezierFastoutSlowin);

  @nest .code:hover &, &:focus-within {
    opacity: 1;
  }

  @media (--mediaMobile) {
    opacity: 1;
  }
}

.copyIcon {
  display: grid;

  & svg {
    opacity: 0;
    grid-area: 1 / 1;
    transition-property: opacity;
    transition-duration: var(--durationS);
    transition-timing-function: var(--bezierFastoutSlowin);

    @media (--mediaUseMotion) {
      transition-property: opacity, transform;
      transform: scale(0.5);
    }
  }

  & svg[data-visible='true'] {
    opacity: 1;
    transform: none;
  }
}

.lang {
  font-family: var(--monoFontFamily);
  position: absolute;
  top: 0;
  left: var(--padding);
  transform: translateY(-50%);
  background-color: rgb(var(--rgbBackground));
  padding: var(--spaceXS) var(--spaceM);
  user-select: none;
}
